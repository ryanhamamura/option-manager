# Dockerfile.dev
FROM golang:1.22-alpine

# Install dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    postgresql-client \
    bash \
    git \
    curl \
    wget \
    delve \
    alpine-sdk \
    openssh \
    zsh \
    tmux \
    sudo \
    ripgrep \
    fd \
    fzf \
    nodejs \
    npm \
    python3 \
    build-base \
    cmake \
    make \
    unzip \
    tree-sitter \
    gettext-dev

# Install latest neovim from source
RUN git clone https://github.com/neovim/neovim \
    && cd neovim \
    && make CMAKE_BUILD_TYPE=RelWithDebInfo \
    && make install \
    && cd .. \
    && rm -rf neovim

# Create user
ARG USERNAME=dev
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN addgroup -g $USER_GID $USERNAME \
    && adduser -s /bin/zsh -G $USERNAME -D -u $USER_UID $USERNAME \
    && mkdir -p /etc/sudoers.d \
    && echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# Install Go tools
RUN go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@v4.17.0 \
    && go install github.com/cosmtrek/air@v1.49.0 \
    && go install golang.org/x/tools/gopls@v0.14.2 \
    && go install github.com/go-delve/delve/cmd/dlv@v1.22.0 \
    && curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin

USER $USERNAME
WORKDIR /home/$USERNAME

# Install oh-my-zsh
RUN sh -c "$(wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)" "" --unattended

# Install NvChad
RUN rm -rf ~/.config/nvim ~/.local/share/nvim && \
    git clone https://github.com/NvChad/starter ~/.config/nvim

WORKDIR /app

ENV GOPATH=/go
ENV PATH=$PATH:/go/bin
ENV EDITOR=nvim
ENV TERM=xterm-256color

CMD ["sleep", "infinity"]
